/*=================================
The warden is a Burst fire weapon capable of 1-tapping most opponent, especially 
on head shots. it requires a degree of precision but can be great on more defense
oriented players

===================================*/

Const float Warden_SPD = 3.8;
Const int Warden_BloomRate = 12;
Const float Warden_Recoil = 3.5;
Const float Warden_Kick = 0.8;
Const float Warden_SwayLeft = 0.5;
Const float Warden_SwayRight = 0.5;
Const int Warden_MoveError = 20;

Const int Warden_D1 = 30; // Highest damage
Const int Warden_R1 = 50; //in 32 MU Meters
Const int Warden_D2 = 25; //Mid damage
Const int Warden_R2 = 80; //in 32 MU Meters
Const int Warden_MinD = 20; //Lowest damage

Const int Warden_H_D1 = 45; // Highest damage
Const int Warden_H_R1 = 50; //in 32 MU Meters
Const int Warden_H_D2 = 40; //Mid damage
Const int Warden_H_R2 = 80; //in 32 MU Meters
Const int Warden_H_MinD = 30; //Lowest damage

const float Warden_MoveSpeed = 0.8;

actor Warden : WepMasterBase
{
Weapon.AmmoUse 33
Weapon.SlotNumber 2
Inventory.Pickupmessage "$PU_WARDEN"
Obituary "$OB_WARDEN"
Tag "$TAG_WARDEN"
weapon.ammotype "BusterPower2"
inventory.icon "WHICON8"
//Dropitem "WardenDropItem"
States
{
Spawn:
WICO H 1
loop
Ready:
PIDB A 1 
"####" "#" 0 A_Jump(256,"Ready.Core")
Goto Ready.Core
Deselect:
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
BUST B 1 A_Lower
Loop
Select:
//TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
TNT1 A 0 ACS_NamedExecuteAlways("WepSetup",0,Warden_MoveSpeed*FVM,W_MainWeapon)
PIDB A 1 A_Raise
Loop

Fire:
"####" A 0 A_GiveInventory("Warden_FS",1)
"####" A 0 A_GiveInventory("Warden_SS",1)
"####" A 0 A_JumpIfNoAmmo("NoAmmo")

"####" A 0 A_PlaySoundEx("weapon/BasherShot","Weapon")
"####" B 1 A_FireCustomMissile("Warden_Beam",CallACS("GetShotDeviation",Warden_SPD*FVM,Warden_MoveError)/FVMF,1,8,0,0,CallACS("GetShotRecoil",Warden_Recoil*FVM)/FVMF)
"####" A 0 A_SetAngle(angle-(FRandom(-Warden_SwayLeft,Warden_SwayRight)),SPF_INTERPOLATE)
"####" A 0 A_GiveInventory("Warden_REC",1) 
"####" C 1 //A_GiveInventory("BloomCount",Warden_BloomRate) //Stat
"####" A 0 A_PlaySoundEx("weapon/BasherShot","Weapon")
"####" B 1 A_FireCustomMissile("Warden_Beam",CallACS("GetShotDeviation",Warden_SPD*FVM,Warden_MoveError)/FVMF,1,8,0,0,CallACS("GetShotRecoil",Warden_Recoil*FVM)/FVMF)
"####" A 0 A_SetAngle(angle-(FRandom(-Warden_SwayLeft,Warden_SwayRight)),SPF_INTERPOLATE)
"####" A 0 A_GiveInventory("Warden_REC",1) 
"####" C 1 //A_GiveInventory("BloomCount",Warden_BloomRate) //Stat
"####" A 0 A_PlaySoundEx("weapon/BasherShot","Weapon")
"####" B 1 A_FireCustomMissile("Warden_Beam",CallACS("GetShotDeviation",Warden_SPD*FVM,Warden_MoveError)/FVMF,1,8,0,0,CallACS("GetShotRecoil",Warden_Recoil*FVM)/FVMF)
"####" A 0 A_SetAngle(angle-(FRandom(-Warden_SwayLeft,Warden_SwayRight)),SPF_INTERPOLATE)
"####" A 0 A_GiveInventory("Warden_REC",1) 
"####" C 1 A_GiveInventory("BloomCount",Warden_BloomRate) //Stat
"####" C 0 A_GiveInventory("Warden_RR",1) 
"####" A 1 
Hold:
"####" A 1
"####" A 0 A_Refire
//"####" A 0 A_TakeInventory("FiringSpeed",9)
Goto Ready


NoAmmo:
"####" "#" 1 A_JumpIfInventory("BusterPower2",1000,"Fire")
"####" "#" 0 A_Refire("NoAmmo")
Goto Ready

Flash:
TNT1 A 1
stop
NoFlash:
TNT1 A 1
stop
}
}


actor WardenDropitem : DropItemBase
{
inventory.pickupmessage "$PU_Warden"
States
{
Spawn:
WICO H -1
loop

Pickup.WepCheck:
DUST B 0 A_JumpIfinventory("Warden",1,"No")
DUST B 0 A_Jump(256,"Pickup.Check")
goto Pickup.Check

Pickup.WepGive:
DUST B 0 ACS_NamedExecuteAlways("DropYourMainWep",0,WP_Warden)
DUST B 0 A_GiveInventory("WepPickupBuffer",1)
DUST B 0 A_GiveInventory("Warden",1)
TNT1 A 0 A_SelectWeapon("Warden")
stop
}
}

actor Warden_SS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 17
powerup.type "AmmoStaller"
}

actor Warden_FS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Speed 0.4
Powerup.Duration 25
powerup.type "FiringSpeed"
}

actor Warden_REC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("ShotCount", 10, "Nope")
DUST B 0 A_GiveInventory("ShotCount",1)
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0 A_SetPitch(pitch-(Warden_Kick),SPF_INTERPOLATE)
stop

Nope:
TNT1 A 0
Stop
}
}

actor Warden_RR : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("RecoilRecover", 1, "Nope")
DUST B 0 A_GiveInventory("RecoilRecover",1)
TNT1 A 0 A_SpawnItemEx("Warden_RRW")
stop
Nope:
TNT1 A 0
Stop
}
}

actor Warden_RRC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_SetPitch(pitch+(Warden_Kick),SPF_INTERPOLATE)
stop
}
}

actor Warden_RRW : RecoilRecoverBase 
{
States
{
Spawn.RR: //Recoil Recover
TNT1 A 0 A_GiveToTarget("Warden_RRC",1)
Goto Spawn.Take
}
}

actor Warden_Beam : LazerTagBeam{args 1} //Penetration

actor Warden_BeamHitBox : LazerTagBeamHitBox
{
states
{
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Warden_BodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Warden_HeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Warden_BeamBurrow : LazerTagBeamBurrow
{
States
{

Explode:
LROC A 0 A_Stop
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1
LROC A 0 A_PlaySoundEx("misc/kingswing", "Weapon")
LMEX A 0 A_SpawnItemEx("Warden_WallBang",cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION)
stop

Repeate:
LMEX A 0 A_SpawnItemEx("Warden_BeamBurrow",cos(pitch)*BurrowSpeed,0,(sin(pitch)*-BurrowSpeed),0,0,0,0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION,0,TID+1)
stop

}
}

actor Warden_WallBang : Warden_Beam
{
States
{

Death:
AQBA L 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("TracerHealthGet")>0,"Headshotcheck")
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Warden_WallBodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Warden_WallHeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Warden_BodyShotter : TF2BodyShotter
{
Obituary "$OB_WARDEN"
args 30
states
{

Spawn2:
TNT1 A 0 A_Explode(CallACS("DMinMax",Warden_MinD,CallACS("DMGR",Warden_D1,Warden_R1,Warden_D2,Warden_R2)),1,0,0,1)
TNT1 A 1
stop
}
}

actor Warden_WallBodyShotter : Warden_BodyShotter
{Obituary "$OB_WALLBANG"}

actor Warden_HeadShotter : TF2HeadShotter
{
Obituary "$OB_WARDEN2"
args 45
states
{
Spawn2:
TNT1 A 0 A_Explode(CallACS("DMinMax",Warden_H_MinD,CallACS("DMGR",Warden_H_D1,Warden_H_R1,Warden_H_D2,Warden_H_R2)),1,0,0,1)
TNT1 A 1
stop
}
}

actor Warden_WallHeadShotter : Warden_HeadShotter
{Obituary "$OB_WALLHEADSHOT"}