/*=================================
The Tracer holds the fastest fire rate of all tier 2 blasters and no real movement 
penalties, making it the ideal run and gun weapon. it's DPS is a bit low without
headshots.
===================================*/

Const float Tracer_SPD = 3.6;
Const int Tracer_BloomRate = 6;
Const float Tracer_Recoil = 0.8;
Const float Tracer_Kick = 1.8;
Const float Tracer_SwayLeft = 4.5;
Const float Tracer_SwayRight = 2.5;
Const int Tracer_MoveError = 35;

Const int Tracer_D1 = 25; // Highest damage
Const int Tracer_R1 = 10; //in 32 MU Meters
Const int Tracer_D2 = 10; //Mid damage
Const int Tracer_R2 = 20; //in 32 MU Meters
Const int Tracer_MinD = 5; //Lowest damage

Const int Tracer_H_D1 = 30; // Highest damage
Const int Tracer_H_R1 = 10; //in 32 MU Meters
Const int Tracer_H_D2 = 12; //Mid damage
Const int Tracer_H_R2 = 20; //in 32 MU Meters
Const int Tracer_H_MinD = 8; //Lowest damage

const float Tracer_MoveSpeed = 1.1;

actor Tracer : WepMasterBase
{
Weapon.AmmoUse 45
Weapon.SlotNumber 2
Inventory.Pickupmessage "$PU_TRACER"
Obituary "$OB_TRACER"
Tag "Tracer"
weapon.ammotype "BusterPower2"
inventory.icon "WHICON9"
//Dropitem "TracerDropItem"
States
{
Spawn:
WICO I 1
loop
Ready:
PIDB A 1 
"####" "#" 0 A_Jump(256,"Ready.Core")
Goto Ready.Core
Deselect:
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
BUST B 1 A_Lower
Loop
Select:
//TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
TNT1 A 0 ACS_NamedExecuteAlways("WepSetup",0,Tracer_MoveSpeed*FVM,W_MainWeapon)
PIDB A 1 A_Raise
Loop

Fire:
"####" A 0 A_GiveInventory("Tracer_RR",1)
"####" A 0 A_GiveInventory("Tracer_FS",1)
"####" A 0 A_GiveInventory("Tracer_SS",1)
"####" A 0 A_JumpIfNoAmmo("NoAmmo")
"####" A 0 A_PlaySoundEx("weapon/basshot","Weapon")
"####" A 0 A_FireCustomMissile("Tracer_Beam",CallACS("GetShotDeviation",Tracer_SPD*FVM,Tracer_MoveError)/FVMF,1,8,0,0,CallACS("GetShotRecoil",Tracer_Recoil*FVM)/FVMF)
"####" A 0 A_GiveInventory("BloomCount",Tracer_BloomRate) //Stat
"####" A 0 A_SetAngle(angle-(CallACS("LeftRightDeviation",1,Tracer_SwayLeft*FVM,Tracer_SwayRight*FVM)/FVMF),SPF_INTERPOLATE)
//"####" A 0 A_SetAngle(angle-(FRandom(-Tracer_SwayLeft,Tracer_SwayRight)),SPF_INTERPOLATE)
"####" A 0 A_GiveInventory("Tracer_REC",1) 
"####" BC 1
"####" A 1
"####" A 0 A_Refire
"####" A 0 A_TakeInventory("FiringSpeed",9)
Goto Ready


NoAmmo:
"####" C 0 A_GiveInventory("Tracer_RR",1) 
"####" A 0 A_TakeInventory("FiringSpeed",9)
NoAmmo2:
"####" "#" 1 A_JumpIfInventory("BusterPower2",1000,"Fire")
"####" "#" 0 A_Refire("NoAmmo2")
Goto Ready

Flash:
TNT1 A 1
stop
NoFlash:
TNT1 A 1
stop
}
}

actor TracerDropitem : DropItemBase
{
inventory.pickupmessage "$PU_Tracer"
States
{
Spawn:
WICO I -1
loop

Pickup.WepCheck:
DUST B 0 A_JumpIfinventory("Tracer",1,"No")
DUST B 0 A_Jump(256,"Pickup.Check")
goto Pickup.Check

Pickup.WepGive:
DUST B 0 ACS_NamedExecuteAlways("DropYourMainWep",0,WP_Tracer)
DUST B 0 A_GiveInventory("WepPickupBuffer",1)
DUST B 0 A_GiveInventory("Tracer",1)
TNT1 A 0 A_SelectWeapon("Tracer")
stop
}
}

actor Tracer_SS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 1
powerup.type "AmmoStaller"
}

actor Tracer_FS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Speed 0.9
Powerup.Duration 8
powerup.type "FiringSpeed"
}

actor Tracer_REC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("ShotCount", 6, "Nope")
DUST B 0 A_GiveInventory("ShotCount",1)
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0 A_SetPitch(pitch-(Tracer_Kick),SPF_INTERPOLATE)
stop

Nope:
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0
Stop
}
}

actor Tracer_RR : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("RecoilRecover", 1, "Nope")
DUST B 0 A_GiveInventory("RecoilRecover",1)
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0 A_SpawnItemEx("Tracer_RRW")
stop
Nope:
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0
Stop
}
}

actor Tracer_RRC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_SetPitch(pitch+(Tracer_Kick),SPF_INTERPOLATE)
stop
}
}

actor Tracer_RRW : RecoilRecoverBase 
{
States
{
Spawn.RR: //Recoil Recover
TNT1 A 0 A_GiveToTarget("Tracer_RRC",1)
Goto Spawn.Take
}
}

actor Tracer_Beam : LazerTagBeam{args 1} //Penetration

actor Tracer_BeamHitBox : LazerTagBeamHitBox
{
states
{
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Tracer_BodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Tracer_HeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Tracer_BeamBurrow : LazerTagBeamBurrow
{
States
{

Explode:
LROC A 0 A_Stop
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1
LROC A 0 A_PlaySoundEx("misc/kingswing", "Weapon")
LMEX A 0 A_SpawnItemEx("Tracer_WallBang",cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION)
stop

Repeate:
LMEX A 0 A_SpawnItemEx("Tracer_BeamBurrow",cos(pitch)*BurrowSpeed,0,(sin(pitch)*-BurrowSpeed),0,0,0,0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION,0,TID+1)
stop

}
}

actor Tracer_WallBang : Tracer_Beam
{
ReactionTime 1
States
{
Spawn:
TNT1 A 0

Spawn2:
TNT1 A 0 A_PlaySoundEx("weapon/Gemini","Weapon")
TNT1 A 1 A_CountDown
loop

Death:
AQBA L 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("TracerHealthGet")>0,"Headshotcheck")
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Tracer_WallBodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Tracer_WallHeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Tracer_BodyShotter : TF2BodyShotter
{
Obituary "$OB_TRACER"
args 30
states
{

Spawn2:
TNT1 A 0 A_Explode(CallACS("DMinMax",Tracer_MinD,CallACS("DMGR",Tracer_D1,Tracer_R1,Tracer_D2,Tracer_R2)),1,0,0,1)
TNT1 A 1
stop
}
}

actor Tracer_WallBodyShotter : Tracer_BodyShotter
{Obituary "$OB_WALLBANG"}

actor Tracer_HeadShotter : TF2HeadShotter
{
Obituary "$OB_TRACER2"
args 45
states
{
Spawn2:
TNT1 A 0 A_Explode(CallACS("DMinMax",Tracer_H_MinD,CallACS("DMGR",Tracer_H_D1,Tracer_H_R1,Tracer_H_D2,Tracer_H_R2)),1,0,0,1)
TNT1 A 1
stop
}
}

actor Tracer_WallHeadShotter : Tracer_HeadShotter
{Obituary "$OB_WALLHEADSHOT"}