/*=================================
The Pounder is a small scale shotgun that packs a real punch for it's size
===================================*/

Const float Pounder_SPD = 6.4; 
Const int Pounder_BloomRate = 45; 
Const float Pounder_Recoil = 8.0;
Const float Pounder_Kick = 8.0;
Const float Pounder_KRecovery = 1.3;
Const float Pounder_SwayLeft = 5.3;
Const float Pounder_SwayRight = 5.3;
Const int Pounder_MoveError = 3;

Const int Pounder_Damage = 5;
Const int Pounder_FalloffRange = FalloffBase-1000;
Const int Pounder_FalloffRate = F_FLR;

Const int Pounder_HeadShotDamage = 8;
Const int Pounder_HeadShotFalloffRange = FalloffBase-750;
Const int Pounder_HeadShotFalloffRate = F_HFLR;

const float Pounder_MoveSpeed = 1.0;

actor Pounder : WepMasterBase
{
Weapon.AmmoUse 360
Weapon.SlotNumber 1
Inventory.Pickupmessage "$PU_POUNDER"
Obituary "$OB_POUNDER"
Tag "Pounder"
weapon.ammotype "BusterPower"
inventory.icon "WHICON5"
//Dropitem "PounderDropItem"
States
{
Spawn:
WICO E 1
loop
Ready:
HLBB A 1  
"####" "#" 0 A_Jump(256,"Ready.Core")
Goto Ready.Core
Deselect:
TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
BUST B 1 A_Lower
Loop
Select:
//TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
TNT1 A 0 ACS_NamedExecuteAlways("WepSpeedMod",0,Pounder_MoveSpeed*FVM)
HLBB AA 0 A_Raise
HLBB A 1
Loop

Fire:
"####" C 0 A_GiveInventory("Pounder_RR",1) 
"####" A 0 A_GiveInventory("Pounder_FS",1)
"####" A 0 A_GiveInventory("Pounder_SS",1)
"####" A 0 A_JumpIfNoAmmo("NoAmmo")
"####" A 0 A_PlaySoundEx("weapon/HardBuster1","Weapon")
"####" A 0 A_FireCustomMissile("Pounder_Beam",0,1,0,0,0,0)
"####" AAAAAAAA 0 A_FireCustomMissile("Pounder_Beam",CallACS("GetShotGun_Deviation",Pounder_SPD*FVM,Pounder_MoveError)/FVMF,0,0,0,0,Pounder_SPD+CallACS("GetShotGun_Deviation",Pounder_SPD*FVM,Pounder_MoveError)/FVMF)
//"####" A 0 A_FireCustomMissile("Pounder_Beam",Frandom(-Pounder_SPD*CallACS("GetBloomRate")/100,Pounder_SPD*CallACS("GetBloomRate")/100),1,8,0)
"####" A 0 A_GiveInventory("BloomCount",Pounder_BloomRate) //Stat
"####" A 0 A_SetAngle(angle-(FRandom(-Pounder_SwayLeft,Pounder_SwayRight)),SPF_INTERPOLATE)
"####" A 1 //Delay needed for shotguns
"####" A 0 A_GiveInventory("Pounder_REC",1)
"####" BC 3 
"####" A 7
"####" A 0 A_Refire
"####" A 0 A_TakeInventory("FiringSpeed",9)
Goto Ready


NoAmmo:
"####" C 0 //A_GiveInventory("Pounder_RR",1) 
"####" A 0 A_TakeInventory("FiringSpeed",9)
NoAmmo2:
"####" "#" 1 A_JumpIfInventory("BusterPower",1000,"Fire")
"####" "#" 0 A_Refire("NoAmmo2")
Goto Ready

Flash:
TNT1 A 1
stop
NoFlash:
TNT1 A 1
stop
}
}

actor PounderDropitem : DropItemBase
{
inventory.pickupmessage "$PU_Pounder"
States
{
Spawn:
WICO E -1
loop

Pickup.WepCheck:
DUST B 0 A_JumpIfinventory("Pounder",1,"No")
DUST B 0 A_Jump(256,"Pickup.Check")
goto Pickup.Check

Pickup.WepGive:
DUST B 0 ACS_NamedExecuteAlways("DropYourWeapons",0,WP_Pounder)
DUST B 0 A_GiveInventory("WepPickupBuffer",1)
DUST B 0 A_GiveInventory("Pounder",1)
TNT1 A 0 A_SelectWeapon("Pounder")
stop
}
}

actor Pounder_SS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Powerup.Duration 10
powerup.type "AmmoStaller"
}

actor Pounder_FS : PowerupGiver
{
inventory.amount 1
inventory.maxamount 1
+INVENTORY.AUTOACTIVATE
Speed 0.9
Powerup.Duration 17
powerup.type "FiringSpeed"
}


actor Pounder_REC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("ShotCount", 12, "Nope")
DUST B 0 A_GiveInventory("ShotCount",6)
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0 A_SetPitch(pitch-(Pounder_Kick),SPF_INTERPOLATE)
stop

Nope:
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0
Stop
}
}

actor Pounder_RR : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("RecoilRecover", 1, "Nope")
DUST B 0 A_GiveInventory("RecoilRecover",1)
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0 A_SpawnItemEx("Pounder_RRW")
stop
Nope:
DUST B 0 A_GiveInventory("RRStaller",1)
TNT1 A 0
Stop
}
}

actor Pounder_RRC : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_SetPitch(pitch+(Pounder_KRecovery),SPF_INTERPOLATE)
stop
}
}

actor Pounder_RRW : RecoilRecoverBase 
{
States
{
Spawn.RR: //Recoil Recover
TNT1 A 0 A_GiveToTarget("Pounder_RRC",1)
Goto Spawn.Take
}
}

actor Pounder_Beam : LazerTagBeam
{
Args 0
States
{
Spawn.Beam:
TNT1 A 0 A_PlaySoundEx("weapon/Gemini","Weapon")
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX2",0,0,0,momx,momy,momz,0,9)
TNT1 A 0 A_Jump(256,"Spawn.Hitbox")
goto Spawn.Hitbox

}
}

actor Pounder_BeamHitBox : LazerTagBeamHitBox
{
states
{
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Pounder_BodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Pounder_HeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Pounder_BeamFX1 : LazerTagBeamFX1
{
Scale 1.5
States
{
Spawn:
AQBA L 0 A_GiveInventory("ProjectileCode",1)
BASH B 2 
stop
}
}

actor Pounder_BeamFX2 : LazerTagBeamFX2
{
States
{
Spawn:
TNT1 A 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,0,0,0,0,1)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.1,-momy*0.1,-momz*0.1,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.2,-momy*0.2,-momz*0.2,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.3,-momy*0.3,-momz*0.3,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.4,-momy*0.4,-momz*0.4,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.5,-momy*0.5,-momz*0.5,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.6,-momy*0.6,-momz*0.6,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.7,-momy*0.7,-momz*0.7,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.8,-momy*0.8,-momz*0.8,0,9)
TNT1 A 0 A_SpawnItemEx("Pounder_BeamFX3",0,0,0,-momx*0.9,-momy*0.9,-momz*0.9,0,9)
TNT1 A 1 
stop
}
}

actor Pounder_BeamFX3 : LazerTagBeamFX3
{
Scale 1.5
States
{
Spawn:
BASH B 0
AQBA L 0 A_GiveInventory("ProjectileCode",1)
BASH B 0 A_Stop
BASH B 1
BASH B 1 A_Fadeout(0.5)
//BASH B 2 A_Fadeout(0.25)
//BASH B 2
//BASH BBBB 2
stop
}
}


actor Pounder_BeamBurrow : LazerTagBeamBurrow
{
States
{

Explode:
LROC A 0 A_Stop
TNT1 A 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 1
LROC A 0 A_PlaySoundEx("misc/kingswing", "Weapon")
LMEX A 0 A_SpawnItemEx("Pounder_WallBang",cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),cos(pitch)*WallBangSpeed,0,(sin(pitch)*-WallBangSpeed),0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION)
stop

Repeate:
LMEX A 0 A_SpawnItemEx("Pounder_BeamBurrow",cos(pitch)*BurrowSpeed,0,(sin(pitch)*-BurrowSpeed),0,0,0,0,SXF_TRANSFERTRANSLATION|SXF_TRANSFERPITCH|SXF_NOCHECKPOSITION,0,TID+1)
stop

}
}

actor Pounder_WallBang : Pounder_Beam
{

States
{

Death:
AQBA L 0 A_GiveInventory("ProjectileDCode",1)
TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("TracerHealthGet")>0,"Headshotcheck")
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
HeadShotCheck:
TNT1 A 0 A_JumpIf(Checkclass("PlayerPawn",AAPTR_TRACER,true)&&z>=ACS_NamedExecuteWithResult("TF2_TracerZGet")+40,"DoHeadshot")
TNT1 A 0 A_SpawnItemEx("Pounder_WallBodyShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("LazerTagPuff",0,0,0,0,0,0,0,1)
stop
DoHeadShot:
TNT1 A 0 A_SpawnItemEx("Pounder_WallHeadShotter",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS)
TNT1 A 0 A_SpawnItemEx("PowerStrikeFX",0,0,0,0,0,0,0,1)
stop
}
}


actor Pounder_BodyShotter : TF2BodyShotter
{
Obituary "$OB_POUNDER"
args 30
states
{

Spawn2:
TNT1 A 0 A_Explode(CallACS("DamageRate",Pounder_Damage,Pounder_FalloffRange,Pounder_FalloffRate),1,0,0,1)
TNT1 A 1
stop
}
}

actor Pounder_WallBodyShotter : Pounder_BodyShotter
{Obituary "$OB_WALLBANG"}

actor Pounder_HeadShotter : TF2HeadShotter
{
Obituary "$OB_POUNDER2"
args 45
states
{
Spawn2:
TNT1 A 0 A_Explode(CallACS("DamageRate",Pounder_HeadShotDamage,Pounder_HeadShotFalloffRange,Pounder_HeadShotFalloffRate),1,0,0,1)
TNT1 A 1
stop
}
}

actor Pounder_WallHeadShotter : Pounder_HeadShotter
{Obituary "$OB_WALLHEADSHOT"}