
actor SmokeScreenGun : BasicLazer
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 2
Weapon.SlotNumber 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "SmokeScreen Gun"
weapon.ammotype2 "SmokeScreenAmmo"
inventory.icon "BUSTI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Altfire:
HSPR B 0 
"####" B 0 A_JumpIfNoAmmo("NoAmmo2")
//"####" B 0 A_JumpIfInventory("SmokeScreenCooldownItem",1,"NoAmmo2")
goto Altfire.Aim

Altfire.Aim:
"####" B 1 A_FireCustomMissile("SmokeScreenAimPath",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" B 0 A_Jumpif(CallACS("CSLT_ButtonCheck",BT_ATTACK)==1,"NoAmmo2")
 "####" B 0 A_Refire("Altfire.Aim")
Goto Altfire.Toss

Altfire.Toss:
"####" FFGGG 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("SmokeScreen",0,1,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" B 0 A_GiveInventory("AmmoStaller")
//"####" B 0 A_GiveInventory("SmokeScreenCooldown")
"####" IJKLM 2
"####" B 0 A_Jump(256,"Ready")
goto Ready

NoAmmo2:
BUST B 3
BUST B 0 A_Refire("NoAmmo")
Goto Ready
}
}



actor Ability1_Smoker : WepMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 2
Weapon.SlotNumber 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "SmokeScreen Gun"
weapon.ammotype2 "SmokeScreenAmmo"
inventory.icon "BUSTI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR B 0 
"####" B 0 A_FireCustomMissile("SmokeScreenAimPath",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" B 1 A_WeaponReady(WRF_NOSWITCH)
goto ready

Fire:
"####" FFGGG 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("SmokeScreen",0,0,0,0,0,Aim_ArcOverHead+(Aim_ArcScale*Sin(-pitch)))
"####" B 0 A_GiveInventory("AmmoStaller")
//"####" B 0 A_GiveInventory("SmokeScreenCooldown")
"####" IJKLM 2
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
"####" B 1
End:
"####" B 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor UseAbility1_Smoker : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("SmokeBombAbility",1)
fail
}
}

actor SmokeBombAbility : CustomInventory
{
states
{
Pickup:
//WEA2 B 0 A_Recoil(-40)
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,1)
stop
}
}
//================

actor Ability2_Smoker : WepMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 2
Weapon.SlotNumber 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "SmokeScreen Gun"
weapon.ammotype2 "SmokeScreenAmmo"
inventory.icon "BUSTI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR B 0 
"####" B 1 A_WeaponReady(WRF_NOSWITCH)
goto ready

Fire:
BOMH A 0 A_PlaySoundEx("weapon/mbuster","Weapon")
BOMH A 0 A_FireCustomMissile("HyperBomb",0,1,8,0)
BOMH BCDEFG 2
BOMH HI 2
BOMH A 7
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
"####" B 1
End:
"####" B 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor UseAbility2_Smoker : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("HyperBombAbility",1)
fail
}
}

actor HyperBombAbility : CustomInventory
{
states
{
Pickup:
//WEA2 B 0 A_Recoil(-40)
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop
}
}
//====

Actor SmokeScreenAmmo : Ammo {inventory.amount 1 inventory.maxamount 2}


Actor HyperBombFlag : inventory {inventory.amount 1 inventory.maxamount 2}

Const int SmkScrRad = 100;

actor SmokeScreenAimPath : GolfBallAimInstantStarter3 { Speed 35 Gravity 1.5}

actor SmokeScreen 
{
PROJECTILE
damagetype "Explosion"
Obituary "$OB_Hyperbomb"
radius 4
height 4
scale 2.0
-NOGRAVITY
+DOOMBOuNCE
+BOUNCEONCEILINGS
+ALLOWBOUNCEONACTORS
+BOUNCEONACTORS
+MTHRUSPECIES
+USEBOUNCESTATE
+NOTARGETSWITCH
+NOEXPLODEFLOOR
+SLIDESONWALLS
+MBFBOUNCER
speed 35
gravity 1.5
Damage (0)
wallbouncefactor 1.0
BounceFactor 0.1
reactiontime 35
States
{
Spawn:
MINB A 0
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
MINB A 1 A_SpawnItemEX("SmokeScreenTrail",0,0,5,0,0,0,0,SXF_TRANSFERTRANSLATION,0)
Goto Spawn2

Bounce.Floor:
Bounce.Ceiling:
MINB A 0 A_ChangeFlag("USEBOUNCESTATE",false)
MINB A 1 A_SpawnItemEX("SmokeScreen2",0,0,0,momx,momy,momz,0,SXF_TRANSFERTRANSLATION|SXF_ABSOLUTEMOMENTUM,0)
stop

Death:
MINB A 0 A_SpawnItemEx("SmokeScreenField")
HARD BCDE 2
stop
Crash:
MINB A 0 A_SpawnItemEx("SmokeScreenField")
HARD BCDE 2
stop
XDeath:
HARD BCDE 2
stop
}
}

actor SmokeScreen2 : SmokeScreen
{
-USEBOUNCESTATE
-NOGRAVITY
States
{
Spawn:
MINB A 0 //A_PlaySoundEX("weapon/Heat1","Soundslot6")
MINB A 0 A_CheckFloor("SlowDown")
MINB A 1 A_CountDown
loop
SlowDown:
MINB A 0 A_ScaleVelocity(0.1)
MINB A 1 A_CountDown
Goto Spawn
	
Death:
MINB A 0 A_SpawnItemEx("SmokeScreenField")
HARD BCDE 2
stop
Crash:
MINB A 0 A_SpawnItemEx("SmokeScreenField")
HARD BCDE 2
stop
XDeath:
HARD BCDE 2
stop
}
}


actor SmokeScreenField : BasicHelper
{
ReactionTime 85
DamageType "SmokeScreen"
obituary "$OB_SmokeScreen"
var int user_angle;
var int user_Pitch;
var int user_Tick;
states
{
Spawn:
TNT1 A 0
TNT1 D 0 ACS_NamedExecuteAlways("GiveM_EntiTID",0,SmkScrM_EntiTID,3)
TNT1 A 2 A_GiveInventory("ProjectileCodeSyncTarget",1)
TNT1 A 0 A_SpawnItemEx("SmokeScreenRing",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION|SXF_TRANSFERPOINTERS,0,tid)
TNT1 AAA 5
Goto Spawnloop

SpawnLoop:
TNT1 A 5 A_CountDown
Loop 

Death:
TNT1 A 1 
stop
}
}


actor SmokeScreenRing //: BasicHelper
{
translation "198:198=220:220", "192:192=229:229"
	reactiontime 3
    var int user_angle;
    PROJECTILE
    +NOINTERACTION
    +NOCLIP
    //+CLIENTSIDEONLY
    +NOTARGETSWITCH
	States
	{
		Spawn:
		TNT1 A 0
        TNT1 A 0 //A_SetUserVar("user_angle", random(0, 30))
        TNT1 A 0 A_GiveInventory("ProjectileCode",1)
        TNT1 A 1 A_SpawnItemEx("SmokeScreenCloud2",0,0,64,0,0,0,0,1061,0,tid)
        SpawnLoop:
        TNT1 A 0 A_SpawnItemEx("SmokeScreenCloud2",96,0,0,0,0,0,user_angle,1061|SXF_TRANSFERPOINTERS,0,tid)
        TNT1 A 0 A_SpawnItemEx("SmokeScreenCloud2",-96,0,0,0,0,0,user_angle,1061|SXF_TRANSFERPOINTERS,0,tid)
		TNT1 A 1 A_SetUserVar("user_angle", user_angle + 60)
		TNT1 A 0 A_Countdown
		loop
		Death:
		TNT1 A 0
		stop
	}
}

actor SmokeScreenCloud2 //: BasicClientside
{
    +MISSILE
    +NOGRAVITY
    +NOINTERACTION
    +NOCLIP
    +FORCEXYBILLBOARD
    //+CLIENTSIDEONLY
    radius 8
    height 8
    Damage (0)
    scale 2.5
    Reactiontime 85
    Renderstyle "Translucent"
    Alpha 0.9
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 AA 1 ACS_NamedExecuteAlways("TeamSmoke",0)
SMKK ABC 5
Spawn2:
SMKK DE 5 A_CountDown
loop
Death:
SMKK FGH 3 A_Fadeout(0.2)
stop
}
}
//[+]========================================================================[+]
//--------------------------------|Effect Actors|------------------------------
//[+]========================================================================[+]
actor SmokeScreenTrail : BasicClientside
{
scale 1.5
States
{
Spawn:
TNT1 A 0
TNT1 A 2
MINB IIIIII 1
MINB IIIIII 1 A_Fadeout
stop
}
}

//[+]========================================================================[+]
//------------------------------|Cooldown Actors|------------------------------
//[+]========================================================================[+]
actor SmokeScreenCooler : BasicHelper // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("SmokeScreenCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("SmokeScreenCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor SmokeScreenCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("SmokeScreenCooldownItem",105)
TNT1 A 0 A_Spawnitemex("SmokeScreenCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor SmokeScreenCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 105
}

