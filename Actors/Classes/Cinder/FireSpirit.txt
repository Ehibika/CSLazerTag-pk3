actor Ability2_Cinder : AbilityMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 2
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "SmokeScreen Gun"
weapon.ammotype2 "SmokeScreenAmmo"
inventory.icon "BUSTI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR B 0 
"####" "#" 0 A_Jumpif(CallACS("CSLT_CheckAbilityInput",1)==1,"User1")
"####" "#" 0 A_Jumpif(CallACS("CSLT_CheckAbilityInput",3)==1,"User3")
//==
"####" B 1 A_WeaponReady
goto ready

Fire:
"####" FFGGG 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("FireSpiritActor",0,0,0,0)
"####" B 1 A_TakeInventory("AbilityCharge_2",1)
"####" B 0 A_GiveInventory("AmmoStaller")
"####" IJKLM 2
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
"####" B 1
End:
"####" B 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor UseAbility2_Cinder : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("FireSpiritAbility",1)
fail
}
}

actor FireSpiritAbility : CustomInventory
{
states
{
Pickup:
TNT1 A 0 A_JumpIfInventory("AbilityCharge_2",1,"Pickup2")
stop

Pickup2:
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop
}
}
//=================
//=================

Const int FireSpiritArea = 500;
//Const int FireSpiritArea2 = 160;
Const int RGI_FireSpirit1 = 3;
Const int RGI_FireSpirit2 = 4;

Const int FireSpiritRad = 50;


actor FireSpiritActor
{
-SOLID
+MISSILE
+MTHRUSPECIES
+NOGRAVITY
+NOEXPLODEFLOOR
+DONTBLAST
+SHOOTABLE
+NOTARGETSWITCH
+SKYEXPLODE
+LOOKALLAROUND
bouncefactor 1.0
Wallbouncefactor 1.0
Health 100
speed 65
scale 2.5
Radius 6
Height 6
reactiontime 35
Args 65
Painchance 0
Bloodtype "ActorHitFX"
states
{
Spawn:
RUSH D 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
Spawn2:
WABU D 0 A_PlaySoundEx("weapon/waveburner","Weapon")
TNT1 AAAA 0 A_SpawnItemEx("IncinerateParticleFX",Random(-32,32),0,0,0,0,6,Random(1,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
HEAT D 1 A_CountDown
Goto Spawn2

Death:
WABU D 0 A_PlaySoundEx("misc/astroplatformappear","Soundslot6")
HEAT E 0 ACS_NamedExecuteAlways("CSLT_RadiusGive",0,RGI_FireSpirit1,FireSpiritArea,RG_ENEMY)
TNT1 AAAA 4 A_SpawnItemEx("FireSpiritPulseFX",0,0,0,0,0,6,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
stop
}
}


actor ActorHitFX
{
  Radius 1
  Height 1
  Scale 2.5
  Renderstyle Add
  +NOGRAVITY
  +NOINTERACTION
  States
  {
  Spawn:
    MMFX A 0 bright
    MMFX A 1 bright A_Stop
    MMFX A 0 bright A_PlaySound ("Misc/Metdie")
    MMFX A 1 bright
    stop
  }
}


actor FireSpiritParticleSpawner : BasicHelper
{
	States
	{
		Spawn:
		TNT1 A 0
		TNT1 A 1 A_GiveInventory("ProjectileCode",1)
        TNT1 A 0 A_SpawnItemEx("IncinerateParticleFX",0,0,-(z-floorz),0,0,0,0,SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
        stop
    }

}


actor FireSpiritPulseFX : BasicClientside
{
scale 0.5
Renderstyle "Add"
ReactionTime 12
Alpha 0.2
speed 7
States
{
Spawn:
TNT1 A 0
HARD B 1 
RFLC A 0 A_SetScale(ScaleX+0.5)
TNT1 AAA 0 A_SpawnItemEx("IncinerateParticleFX",Random(-64,64),0,0,0,0,6,Random(1,360),SXF_NOCHECKPOSITION|SXF_TRANSFERTRANSLATION)
RFLC A 0 A_FadeIn
RFLC A 0 A_CountDown
loop

Death:
RFLC A 0
stop
}
}

actor FireSpiritXRay : PowerupGiver
{
+INVENTORY.AUTOACTIVATE
Powerup.Duration -5
inventory.Amount 1
powerup.type "XRayTagFlag"
}

actor RadiusGiveItem_3 : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("XRayTagFlag",1,"Nope")
TNT1 A 0 A_PlaySoundEx("weapon/slow","Weapon")
TNT1 A 0 A_GiveInventory("FireSpiritXRay")
stop
Nope:
TNT1 A 0
Stop
}
}
/*
actor FireSpiritRage : PowerupGiver
{
+INVENTORY.AUTOACTIVATE
Powerup.Duration 17
inventory.Amount 1
powerup.type "RageRune"
}
*/
ACTOR FireSpiritRage : PowerDoubleFiringSpeed  {inventory.Amount 1 Powerup.Duration -5}

actor RadiusGiveItem_4 : CustomInventory
{
States
{
Pickup:
TNT1 A 0 A_JumpIfInventory("FireSpiritRage",1,4)
TNT1 A 0 A_SpawnItemEx("FireRageWatcher")
TNT1 A 0 A_PlaySoundEx("weapon/pharaoh1","Weapon")
TNT1 A 0 A_GiveInventory("FireRageView")
TNT1 A 0 A_GiveInventory("FireSpiritRage")
stop
Nope:
TNT1 A 0
Stop
}
}

actor FireRageView : Powerup
{
powerup.duration 0x7FFFFFFD
Powerup.Color "55 00 00", 0.2
}

actor FireRageWatcher
{
Height 0
Radius 0
+NOINTERACTION
-SOLID
+NOGRAVITY
+MISSILE
States
{
Spawn:
TNT1 A 0 
TNT1 A 3 A_GiveToTarget("FireRageFX", 1)
TNT1 A 0 A_JumpIfInTargetInventory("FireSpiritRage", 1, "Spawn")
TNT1 A 0 A_TakeFromTarget("FireRageView", 1)
stop
}
}

actor FireRageFX : CustomInventory
{
+INVENTORY.AUTOACTIVATE
-INVBAR
States
{
Use:
TNT1 A 0
TNT1 A 0 A_SpawnItemEx("IncinerateParticleFX", random(-16, -48), 0, Random(16,48), 0, 0, 0, random(-90, 90))
stop
}
}