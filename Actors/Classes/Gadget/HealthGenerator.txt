actor Ability2_Gadget : WepMasterBase
{
Weapon.AmmoUse2 1
Weapon.AmmoGive2 2
Weapon.SlotNumber 0
Inventory.Pickupmessage "$PU_MEGABUSTER"
Obituary "$OB_MEGABUSTER"
Tag "SmokeScreen Gun"
//weapon.ammotype2 "SmokeScreenAmmo"
inventory.icon "BUSTI"
Dropitem ""
+WEAPON.ALLOW_WITH_RESPAWN_INVUL
States
{

Ready:
HSPR B 0 
"####" B 1 A_WeaponReady(WRF_NOSWITCH)
goto ready

Fire:
"####" FFGGG 1
"####" C 0 A_PlaySoundEx("weapon/crackerthrow","Weapon")
"####" B 0 A_FireCustomMissile("HealthGenBaseThrow",0,0,0,0)
"####" B 0 A_GiveInventory("AmmoStaller")
"####" IJKLM 2
"####" B 0 A_Jump(256,"End")
goto End

AltFire:
"####" B 1
End:
"####" B 1 A_TakeInventory("AbilityActiveFlag",9)
"####" B 0 
Goto End
}
}
//====

actor UseAbility2_Gadget : CustomInventory
{
states
{
Use:
WEA2 A 0 A_GiveInventory("HealthGeneratorAbility",1)
fail
}
}

actor HealthGeneratorAbility : CustomInventory
{
states
{
Pickup:
//WEA2 B 0 A_Recoil(-40)
TNT1 A 0 ACS_NamedExecuteAlways("RunClassAbility",0,2)
stop
}
}
//=================
//=================
Actor HealthGeneratorFlag : inventory {inventory.amount 1 inventory.maxamount 2}

actor ScreenHealth : inventory {inventory.amount 1 inventory.maxamount 500}
actor HealthGenActive : inventory {inventory.amount 1 inventory.maxamount 1}
actor HealthGenKiller : powerup {inventory.amount 1 inventory.maxamount 1 Powerup.duration 5}

actor HealthGenBaseThrow : BasicProjectile
{
+THRUACTORS
+BOUNCEONWALLS
+BOUNCEONCEILINGS
-NOGRAVITY
Damage (0)
//Missiletype "RepidifierTrail"
speed 60
Scale 1.9
Gravity 4.3
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
HGEN A 2 
wait
Death:
//HGEN A 0 A_JumpifinTargetInventory("HealthGenActive",1,"Replace")
TNT1 A 0 A_Givetotarget("HealthGenActive")
HGEN A 1 A_GiveInventory("HealthGenBaseSpawner")
//TNT1 A 0 A_SpawnitemEx("HealthGenBase")
stop
Replace:
HGEN A 6 A_Givetotarget("HealthGenKiller")
HGEN A 1 A_GiveInventory("HealthGenBaseSpawner")
//TNT1 A 0 A_SpawnitemEx("HealthGenBase")
stop
}
}

Actor HealthGenBaseThrow_BLUE : HealthGenBaseThrow{}
Actor HealthGenBaseThrow_RED : HealthGenBaseThrow{translation "192:192=54:54", "198:198=42:42" , "196:196=170:170"}


actor HealthGenBase //: BasicProjectile
{
  +MISSILE
  +SHOOTABLE
  +NOGRAVITY
  +NOTELEPORT
  +NOTARGETSWITCH
  +THRUSPECIES
  +NOBLOOD
  //+MTHRUSPECIES
  +NOCLIP
+MOVEWITHSECTOR
Health 50
Damage (0)
Radius 14
Height 16
Mass 9999999
//Missiletype "RepidifierTrail"
speed 0
Var Int User_Tick;
Var Int User_Frame;
Var Int User_Tally;
Var Int User_TargTID;

Var Int User_EXP;
Var Int User_Level;
Scale 1.9
States
{
Spawn:
TNT1 A 0 
TNT1 A 0 A_GiveInventory("ProjectileCode",1)
TNT1 A 0 A_SetUserVar("User_TargTID",ACS_ExecuteWithResult(257,0))//A_ChangeFlag("MISSILE",0)
HGEN A 2
HGEN A 2  ACS_NamedExecuteAlways("GiveM_EntiTID",0,5,3)
Spawn2:
HGEN A 1
HGEN A 1 A_Jumpif(CallACS("CountTID",tid-1000) >= 1  ,"Spawn2")
Goto Frame0
Spawn3: //health exists, idle for now
HGEN A 2 
HGEN AA 1 A_Jumpif(CallACS("CountTID",tid-1000) <= 0  ,"Spawn2")//A_Jumpif(ACS_ExecuteWithResult(CountTID,((User_TargTID - 1000)*100)+3000) <= 0  ,"Spawn2")
Goto Spawn3
Frame0:
HGEN A 0 A_Jumpif(User_Frame > 9,"SpawnHealth")
HGEN A 0 A_Jumpif(User_Frame > 8,"Frame8")
HGEN A 0 A_Jumpif(User_Frame > 7,"Frame7")
HGEN A 0 A_Jumpif(User_Frame > 6,"Frame6")
HGEN A 0 A_Jumpif(User_Frame > 5,"Frame5")
HGEN A 0 A_Jumpif(User_Frame > 4,"Frame4")
HGEN A 0 A_Jumpif(User_Frame > 3,"Frame3")
HGEN A 0 A_Jumpif(User_Frame > 2,"Frame2")
HGEN A 0 A_Jumpif(User_Frame > 1,"Frame1")
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX0",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
HGEN A 1
Frame1:
HGEN A 0 A_SpawnitemEx("SpawnPrepFX1",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame2:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX2",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame3:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX3",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame4:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX4",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame5:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX5",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame6:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX6",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame7:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX7",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd
Frame8:
HGEN A 1
HGEN A 0 A_SpawnitemEx("SpawnPrepFX8",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS)
Goto CycleEnd

CycleEnd:
HGEN A 0 A_SetUserVar("User_Tick",User_Tick+1)
HGEN A 0 A_Jumpif(User_Tick >= 9-User_Level,"FrameUp")
//HGEN A 0 A_JumpifinTargetInventory("ScreenHealth",1,"Spawn")
Goto Spawn2

FrameUp:
HGEN A 0 A_SetUserVar("User_Tick",0)
HGEN A 0 A_SetUserVar("User_Frame",User_Frame+1)
//HGEN A 0 A_JumpifinTargetInventory("ScreenHealth",1,"Spawn")
Goto Spawn2

SpawnHealth:
HGEN A 0 A_PlaySoundEx("misc/astroplatformappear","Weapon")
TNT1 A 0 A_SpawnitemEx("HealthGenPickup",0,0,30,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION,0,tid-1000)
HGEN ABABABAB 2
HGEN A 0 A_SetUserVar("User_Tick",0)
HGEN A 0 A_SetUserVar("User_Frame",0)
HGEN A 0 A_SetUserVar("User_EXP",User_EXP+1)
HGEN A 0 A_Jumpif(User_EXP >= 2 && User_Level < 7,"LevelUp")
Goto Spawn3

LevelUp:
HGEN A 0 A_SetUserVar("User_Level",User_Level+1)
HGEN A 0 A_SetUserVar("User_EXP",0)
HGEN A 0 A_PlaySoundEx("misc/GravityWarn","Weapon")
HGEN A 0 A_SpawnitemEx("HGenLevelupFX",0,0,40,0,0,3,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)

Goto Spawn3

Death:
TNT1 A 1 A_TakeFromTarget("HealthGenActive",99)
	TNT1 A 1 A_PlaySoundEx("weapon/CentaurFlash","Weapon")
	TNT1 AAAAAAAAAA 0 A_SpawnItemEx("CentaurFlashFX", 0, 0, 28, 256/24, 256/24, random2(256/24), random(0, 359))
Terminate:
TNT1 A 0
TNT1 A 1 //A_Givetotarget("HealthGenKiller")
Perish:
TNT1 A 0
stop
}
}

actor HealthGenBase_RED : HealthGenBase {Designatedteam 1 Species "REDMember"}
actor HealthGenBase_BLUE : HealthGenBase {Designatedteam 0 Species "BLUEMember"}

actor SpawnPrepFX0 : BasicClientside
{
scale 2.0 
Alpha 0.5
States 
{
Spawn: 
TNT1 A 0 
HGEN L 3 
stop
}
}

actor SpawnPrepFX1 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN K 3 
stop
}
}

actor SpawnPrepFX2 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN J 3 
stop
}
}

actor SpawnPrepFX3 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN I 3 
stop
}
}

actor SpawnPrepFX4 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN H 3 
stop
}
}

actor SpawnPrepFX5 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN G 3 
stop
}
}

actor SpawnPrepFX6 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN F 3 
stop
}
}

actor SpawnPrepFX7 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN E 3 
stop
}
}

actor SpawnPrepFX8 : SpawnPrepFX0
{
scale 2.0 
States 
{
Spawn: 
TNT1 A 0 
HGEN D 3 
stop
}
}


actor HGenLevelupFX : SpawnPrepFX0
{
scale 2.5 
Alpha 1.0
States 
{
Spawn: 
TNT1 A 0 
HGEN MNMN 3
TNT1 A 0 A_stop
HGEN MNMN 3 
HGEN MNMNMNMN 3 A_Fadeout
stop
}
}
Actor HealthGenPickup : CustomInventory //replaces BigHealth //10002
{
//$Category MM8BDM-Health/Energy
-COUNTITEM
+MISSILE
+NOGRAVITY
+INVENTORY.IGNORESKILL
Inventory.Amount 1
Inventory.MaxAmount 1
Inventory.PickUpMessage "Picked up a large health capsule."
Inventory.PickUpSound "item/energyup"
Scale 2.0
Var Int User_Tally;
States
{
Spawn:
TNT1 A 0
TNT1 A 2 //ACS_ExecuteAlways(ObjectTally,0)
//TNT1 A 0 Thing_ChangeTID(0,ACS_ExecuteWithResult(257,0)+3000)
TNT1 A 0 ACS_NamedExecuteAlways("HealthGenSyncher",0)
TNT1 A 0 //A_Logint(tid)
Spawn2:
HGEN C 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0 //A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")
HGEN C 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0// A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")
HGEN C 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0 //A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")

HGEN D 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0 //A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")
HGEN D 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0 //A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")
HGEN D 2 
HGEN C 0 A_JumpifinTargetInventory("HealthGenKiller",1,"Death")
HGEN C 0 //A_CheckFlag("NOGRAVITY", "Death", AAPTR_TARGET)
HGEN A 0 A_Jumpif(User_Tally > 1,"Death")

Loop
Pickup:
TNT1 A 0
TNT1 A 0 A_JumpIf(CallACS("CSLT_HealthPercent",0,0,0)<100,"Healme") 

TNT1 A 0
Fail
Healme:
TNT1 A 0 HealThing(30)
TNT1 A 0
stop
TNT1 A 0 HealThing(0)
stop
Nope:
TNT1 A 0 
Fail
Death:
Perish:
TNT1 A 0
TNT1 A 0 
stop
}
}

//[+]========================================================================[+]
//--------------------------------|Special Actors|------------------------------
//[+]========================================================================[+]

actor HealthGeneratorCooler : BasicHelper // Coolers are a type of watcher actor that handle weapon cooldowns
{
States
{
Spawn:
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 1
TNT1 A 0 A_TakeFromTarget("HealthGeneratorCooldownItem",1)
TNT1 A 0 A_JumpIfInTargetInventory("HealthGeneratorCooldownItem",1,"Spawn")
Death:
DeathTake:
TNT1 A 0
stop
}
}

actor HealthGeneratorCooldown : CustomInventory
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
TNT1 A 0 A_Giveinventory("HealthGeneratorCooldownItem",35)
TNT1 A 0 A_Spawnitemex("HealthGeneratorCooler")
stop
Nope:
//BUST B 0 A_PlaySoundEx("weapon/heat3","Item")
TNT1 A 0
stop
}
}

actor HealthGeneratorCooldownItem : inventory
{
inventory.amount 1
inventory.maxamount 35
}
//[+]========================================================================[+]
//--------------------------------|Suit Actors |------------------------------
//[+]========================================================================[+]
actor HealthGeneratorResource : inventory{inventory.amount 1 inventory.maxamount 100}

actor HGen_ResourceWatcher : BasicHelper 
{
Var Int User_BoostFX;
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("CutterFlag",999,"DeathTake")
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,"DeathTake")
TNT1 A 6
TNT1 A 0 A_JumpIfInTargetInventory("HealthGeneratorResource",100,"Spawn.noGive")
TNT1 A 0 A_GiveToTarget("HealthGeneratorResource",1)
Goto Spawn
Spawn.noGive:
TNT1 A 0 
Goto Spawn
Death:
DeathTake:
TNT1 A 0
stop
}
}


//[+]========================================================================[+]
//--------------------------------|Item Shooters|------------------------------
//[+]========================================================================[+]
actor HealthGeneratorShooter : CustomInventory  //places a buster posie based on the team.
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
BLTR C 0 A_Jumpifinventory("WilyTeamFlag",1,"TeamRedFire")
BLTR C 0 A_Jumpifinventory("LightTeamFlag",1,"TeamBlueFire")
BUST B 0 A_FireCustomMissile("HealthGenBaseThrow",0,0,4,12)
stop
TeamRedFire:
BUST B 0 A_FireCustomMissile("HealthGenBaseThrow_RED",0,0,4,12)
TNT1 A 0
stop
TeamBlueFire:
BUST B 0 A_FireCustomMissile("HealthGenBaseThrow_BLUE",0,0,4,12)
TNT1 A 0
stop
}
}


actor HealthGenBaseSpawner : CustomInventory  //places a buster posie based on the team.
{
inventory.amount 1
Inventory.MaxAmount 100
+AUTOACTIVATE
States
{
Spawn:
TNT1 A 0
stop
Pickup:
BLTR C 0 A_JumpifinTargetinventory("WilyTeamFlag",1,"TeamRedFire")
BLTR C 0 A_JumpifinTargetinventory("LightTeamFlag",1,"TeamBlueFire")
BUST B 0 A_Spawnitemex("HealthGenBase",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
stop
TeamRedFire:
BUST B 0 A_Spawnitemex("HealthGenBase_RED",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0
stop
TeamBlueFire:
BUST B 0 A_Spawnitemex("HealthGenBase_BLUE",0,0,0,0,0,0,0,SXF_TRANSFERPOINTERS|SXF_TRANSFERTRANSLATION)
TNT1 A 0
stop
}
}
